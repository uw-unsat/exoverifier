1 INSTALLING C32SAT
------------------------------------------------------------------------------
C32SAT uses a SAT solver as backend. At the moment C32SAT supports:

 1) PicoSAT (default) 
 2) Booleforce 
 3) NanoSAT 
 4) Compsat 

So please install one of them before you continue with the
installation process of C32SAT. The solvers can be freely downloaded from
http://fmv.jku.at/software/.


1.1 CONFIGURE
------------------------------------------------------------------------------
Now we can configure C32SAT's SAT solver adapter configuration. Run 
"./configure -h" to show the help screen which lists all available
options.

EXAMPLE:
We want to use the SAT solver NanoSAT and NanoSAT's directory is
"/home/verification/nanosat-1.3". We call the configure script
with the parameters "--nanosat" and "-d /home/verification/nanosat-1.3" 
to generate the configuration of C32SAT's SAT solver adapter.

NOTES:
 1) If you do not specify a SAT solver then PicoSAT is assumed.
 2) If you do not specify a directory then ".." is assumed.


1.2 MAKE
------------------------------------------------------------------------------
Now we are able to compile C32SAT. Just call "make" and the whole project
should be compiled. If you want to clean the compilation then just call
"make clean".
 

1.3 RUN TESTS (optional)
------------------------------------------------------------------------------
Now we should check if C32SAT works correctly on your system. Just call
./run_tests.sh". All test cases should succeed.



2 GRAPHICAL USER INTERFACE XC32SAT (optional)
------------------------------------------------------------------------------
C32SAT provides a graphical user interface XC32SAT which uses the GIMP 
Toolkit.


2.1 COMPILING XC32SAT
------------------------------------------------------------------------------
XC32SAT needs at least GTK+ 2.6.

Go into the directory "xc32sat" and simply execute "make". Finally, you should
be able to run XC32SAT. Before you run XC32SAT make sure that C32SAT is 
compiled. XC32SAT calls C32SAT via system calls.



3 DOCUMENTATION (optional)
------------------------------------------------------------------------------
This section discusses the available documentation of C32SAT.


3.1 MAIN DOCUMENTATION
------------------------------------------------------------------------------
The main documentation of C32SAT is the master thesis "C32SAT:A Satisfiability
Checker for C Expressions" by Robert Brummayer. It can be downloaded 
from http://www.fmv.jku.at/c32sat/.

Note that the description of the installation
process there is not up-to-date. There is also an Errata document 
"errata.pdf" which contains error corrections and notes. 
Additionally, there is the document "update.pdf" which contains a short
description of the most important changes of C32SAT.


3.2 CODE DOCUMENTATION
------------------------------------------------------------------------------
A documentation of the source can be generated by the tool "Doxygen" which 
can be downloaded from http://www.doxygen.org. Just run it on the 
configuration file "doxyconfig" to generate the code documentation. 
Doxygen generates a subdirectory "doc/html" where the documentation of the 
code can be found. The Doxygen configuration file of C32SAT's core 
can be found in "src". The Doxygen configuration file of C32SAT's test 
suite can be found in "src/test". 
